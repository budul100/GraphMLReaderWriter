//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 1.0.0.0 using the following command:
// XmlSchemaClassGenerator.Console -o . -n http://graphml.graphdrawing.org/xmlns=GraphML -n http://www.w3.org/1999/xlink=XLink -n http://www.yworks.com/xml/graphml=YEd --nu --sf --csm=Public --ct=System.Array --dc .\_XSD\ygraphml.xsd
namespace YEd
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("Label.type", Namespace="http://www.yworks.com/xml/graphml")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(EdgeLabelType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NodeLabelType))]
    public partial class LabelType : IOpRectangleGroup
    {
        
        [System.Xml.Serialization.XmlElementAttribute("LabelModel")]
        public LabelTypeLabelModel LabelModel { get; set; }
        
        [System.Xml.Serialization.XmlElementAttribute("ModelParameter")]
        public LabelTypeModelParameter ModelParameter { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("x")]
        public double X { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool XSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("y")]
        public double Y { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool YSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("width")]
        public double Width { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("height")]
        public double Height { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("visible")]
        public bool Visible { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VisibleSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("alignment")]
        public AlignmentType Alignment { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AlignmentSpecified { get; set; }
        
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("#(([A-F]|[0-9]){2}){3,4}")]
        [System.Xml.Serialization.XmlAttributeAttribute("textColor")]
        public string TextColor { get; set; }
        
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("#(([A-F]|[0-9]){2}){3,4}")]
        [System.Xml.Serialization.XmlAttributeAttribute("lineColor")]
        public string LineColor { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("hasLineColor")]
        public bool HasLineColor { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasLineColorSpecified { get; set; }
        
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("#(([A-F]|[0-9]){2}){3,4}")]
        [System.Xml.Serialization.XmlAttributeAttribute("backgroundColor")]
        public string BackgroundColor { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("hasBackgroundColor")]
        public bool HasBackgroundColor { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasBackgroundColorSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("hasText")]
        public bool HasText { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasTextSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fontFamily")]
        public string FontFamily { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fontSize")]
        public byte FontSize { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontSizeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("fontStyle")]
        public FontStyleType FontStyle { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FontStyleSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("rotationAngle")]
        public double RotationAngle { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RotationAngleSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("icon")]
        public string Icon { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("image")]
        public string Image { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("iconData")]
        public string IconData { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("underlinedText")]
        public bool UnderlinedText { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UnderlinedTextSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("horizontalTextPosition")]
        public HorizontalTextPositionType HorizontalTextPosition { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HorizontalTextPositionSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("verticalTextPosition")]
        public VerticalTextPositionType VerticalTextPosition { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VerticalTextPositionSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("iconTextGap")]
        public sbyte IconTextGap { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IconTextGapSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("configuration")]
        public string Configuration { get; set; }
        
        [System.Xml.Serialization.XmlTextAttribute()]
        public string[] Text { get; set; }
    }
}
