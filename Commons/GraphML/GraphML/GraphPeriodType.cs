//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.0.594.0 using the following command:
// XmlSchemaClassGenerator.Console -o . -n http://graphml.graphdrawing.org/xmlns=GraphML -n http://www.w3.org/1999/xlink=XLink --nu --sf --csm=Public --ct=System.Array --dc .\_XSD\graphml_complete.xsd
namespace GraphML
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.0.594.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("graph.type", Namespace="http://graphml.graphdrawing.org/xmlns")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("graph", Namespace="http://graphml.graphdrawing.org/xmlns")]
    public partial class GraphPeriodType : IGraphPeriodExtraPeriodAttrib
    {
        
        [System.Xml.Serialization.XmlElementAttribute("desc")]
        public string Desc { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private DataPeriodType[] data;
        
        [System.Xml.Serialization.XmlElementAttribute("data")]
        public DataPeriodType[] Data
        {
            get
            {
                return this.data;
            }
            set
            {
                this.data = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataSpecified
        {
            get
            {
                return ((this.Data != null) 
                            && (this.Data.Length != 0));
            }
        }
        
        public GraphPeriodType()
        {
            this.data = System.Array.Empty<DataPeriodType>();
            this.node = System.Array.Empty<NodePeriodType>();
            this.edge = System.Array.Empty<EdgePeriodType>();
            this.hyperedge = System.Array.Empty<HyperedgePeriodType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private NodePeriodType[] node;
        
        [System.Xml.Serialization.XmlElementAttribute("node")]
        public NodePeriodType[] Node
        {
            get
            {
                return this.node;
            }
            set
            {
                this.node = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NodeSpecified
        {
            get
            {
                return ((this.Node != null) 
                            && (this.Node.Length != 0));
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private EdgePeriodType[] edge;
        
        [System.Xml.Serialization.XmlElementAttribute("edge")]
        public EdgePeriodType[] Edge
        {
            get
            {
                return this.edge;
            }
            set
            {
                this.edge = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EdgeSpecified
        {
            get
            {
                return ((this.Edge != null) 
                            && (this.Edge.Length != 0));
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private HyperedgePeriodType[] hyperedge;
        
        [System.Xml.Serialization.XmlElementAttribute("hyperedge")]
        public HyperedgePeriodType[] Hyperedge
        {
            get
            {
                return this.hyperedge;
            }
            set
            {
                this.hyperedge = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HyperedgeSpecified
        {
            get
            {
                return ((this.Hyperedge != null) 
                            && (this.Hyperedge.Length != 0));
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("locator")]
        public LocatorPeriodType Locator { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("attr.name")]
        public string AttrPeriodName { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("attr.type")]
        public KeyPeriodTypePeriodType AttrPeriodType { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AttrPeriodTypeSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("edgedefault")]
        public GraphPeriodEdgedefaultPeriodType Edgedefault { get; set; }
    }
}
