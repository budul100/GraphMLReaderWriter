//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 1.0.0.0 using the following command:
// XmlSchemaClassGenerator.Console -o . -n http://graphml.graphdrawing.org/xmlns=GraphML -n http://www.w3.org/1999/xlink=XLink -n http://www.yworks.com/xml/graphml=YEd --nu --sf --csm=Public --ct=System.Array --dc .\_XSD\ygraphml.xsd
namespace GraphML
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("graph.type", Namespace="http://graphml.graphdrawing.org/xmlns")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("graph", Namespace="http://graphml.graphdrawing.org/xmlns")]
    public partial class GraphType : IGraphExtraAttrib
    {
        
        [System.Xml.Serialization.XmlElementAttribute("desc")]
        public string Desc { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private DataType[] data;
        
        [System.Xml.Serialization.XmlElementAttribute("data")]
        public DataType[] Data
        {
            get
            {
                return data;
            }
            set
            {
                data = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataSpecified
        {
            get
            {
                return ((this.Data != null) 
                            && (this.Data.Length != 0));
            }
        }
        
        public GraphType()
        {
            this.data = System.Array.Empty<DataType>();
            this.node = System.Array.Empty<NodeType>();
            this.edge = System.Array.Empty<EdgeType>();
            this.hyperedge = System.Array.Empty<HyperedgeType>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private NodeType[] node;
        
        [System.Xml.Serialization.XmlElementAttribute("node")]
        public NodeType[] Node
        {
            get
            {
                return node;
            }
            set
            {
                node = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NodeSpecified
        {
            get
            {
                return ((this.Node != null) 
                            && (this.Node.Length != 0));
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private EdgeType[] edge;
        
        [System.Xml.Serialization.XmlElementAttribute("edge")]
        public EdgeType[] Edge
        {
            get
            {
                return edge;
            }
            set
            {
                edge = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EdgeSpecified
        {
            get
            {
                return ((this.Edge != null) 
                            && (this.Edge.Length != 0));
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private HyperedgeType[] hyperedge;
        
        [System.Xml.Serialization.XmlElementAttribute("hyperedge")]
        public HyperedgeType[] Hyperedge
        {
            get
            {
                return hyperedge;
            }
            set
            {
                hyperedge = value;
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HyperedgeSpecified
        {
            get
            {
                return ((this.Hyperedge != null) 
                            && (this.Hyperedge.Length != 0));
            }
        }
        
        [System.Xml.Serialization.XmlElementAttribute("locator")]
        public LocatorType Locator { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("parse.nodeids")]
        public GraphML.GraphNodeidsType ParseNodeids { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParseNodeidsSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("parse.edgeids")]
        public GraphML.GraphEdgeidsType ParseEdgeids { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParseEdgeidsSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("parse.order")]
        public GraphML.GraphOrderType ParseOrder { get; set; }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ParseOrderSpecified { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("parse.nodes")]
        public string ParseNodes { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("parse.edges")]
        public string ParseEdges { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("parse.maxindegree")]
        public string ParseMaxindegree { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("parse.maxoutdegree")]
        public string ParseMaxoutdegree { get; set; }
        
        [System.Xml.Serialization.XmlAttributeAttribute("id")]
        public string Id { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute()]
        [System.Xml.Serialization.XmlAttributeAttribute("edgedefault")]
        public GraphEdgedefaultType Edgedefault { get; set; }
    }
}
